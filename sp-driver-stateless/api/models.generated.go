// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package api

import (
	"encoding/json"

	"github.com/oapi-codegen/runtime"
)

// Defines values for ExecutionStatus.
const (
	Fail ExecutionStatus = "fail"
	Pass ExecutionStatus = "pass"
)

// ErrorMessage An error message for a bad request.
type ErrorMessage struct {
	// Message The error message.
	Message string `json:"message"`
}

// ExecutionStatus Execution Status: * `pass` - The step executed successfully * `fail` - The step failed due to a variety of reasons which may include but not limited to failed expectations, invalid preconditions, timeouts, etc.
type ExecutionStatus string

// MonetaryValue The numerical part of a monetary amount in decimal notation. Negative values are allowed.
type MonetaryValue = string

// StepResponse defines model for StepResponse.
type StepResponse struct {
	ErrorMessage *string `json:"errorMessage"`

	// Status Execution Status: * `pass` - The step executed successfully * `fail` - The step failed due to a variety of reasons which may include but not limited to failed expectations, invalid preconditions, timeouts, etc.
	Status    ExecutionStatus                                         `json:"status"`
	Variables *map[string]StepResponse_Variables_AdditionalProperties `json:"variables"`
}

// StepResponseVariables0 defines model for .
type StepResponseVariables0 = string

// StepResponseVariables1 defines model for .
type StepResponseVariables1 = int

// StepResponseVariables2 defines model for .
type StepResponseVariables2 = float32

// StepResponseVariables3 defines model for .
type StepResponseVariables3 = bool

// StepResponse_Variables_AdditionalProperties defines model for StepResponse.variables.AdditionalProperties.
type StepResponse_Variables_AdditionalProperties struct {
	union json.RawMessage
}

// Transfer defines model for Transfer.
type Transfer struct {
	// Amount The numerical part of a monetary amount in decimal notation. Negative values are allowed.
	Amount   MonetaryValue `json:"amount"`
	Receiver int           `json:"receiver"`
	Sender   int           `json:"sender"`
}

// TransferJSONRequestBody defines body for Transfer for application/json ContentType.
type TransferJSONRequestBody = Transfer

// AsStepResponseVariables0 returns the union data inside the StepResponse_Variables_AdditionalProperties as a StepResponseVariables0
func (t StepResponse_Variables_AdditionalProperties) AsStepResponseVariables0() (StepResponseVariables0, error) {
	var body StepResponseVariables0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStepResponseVariables0 overwrites any union data inside the StepResponse_Variables_AdditionalProperties as the provided StepResponseVariables0
func (t *StepResponse_Variables_AdditionalProperties) FromStepResponseVariables0(v StepResponseVariables0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStepResponseVariables0 performs a merge with any union data inside the StepResponse_Variables_AdditionalProperties, using the provided StepResponseVariables0
func (t *StepResponse_Variables_AdditionalProperties) MergeStepResponseVariables0(v StepResponseVariables0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsStepResponseVariables1 returns the union data inside the StepResponse_Variables_AdditionalProperties as a StepResponseVariables1
func (t StepResponse_Variables_AdditionalProperties) AsStepResponseVariables1() (StepResponseVariables1, error) {
	var body StepResponseVariables1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStepResponseVariables1 overwrites any union data inside the StepResponse_Variables_AdditionalProperties as the provided StepResponseVariables1
func (t *StepResponse_Variables_AdditionalProperties) FromStepResponseVariables1(v StepResponseVariables1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStepResponseVariables1 performs a merge with any union data inside the StepResponse_Variables_AdditionalProperties, using the provided StepResponseVariables1
func (t *StepResponse_Variables_AdditionalProperties) MergeStepResponseVariables1(v StepResponseVariables1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsStepResponseVariables2 returns the union data inside the StepResponse_Variables_AdditionalProperties as a StepResponseVariables2
func (t StepResponse_Variables_AdditionalProperties) AsStepResponseVariables2() (StepResponseVariables2, error) {
	var body StepResponseVariables2
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStepResponseVariables2 overwrites any union data inside the StepResponse_Variables_AdditionalProperties as the provided StepResponseVariables2
func (t *StepResponse_Variables_AdditionalProperties) FromStepResponseVariables2(v StepResponseVariables2) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStepResponseVariables2 performs a merge with any union data inside the StepResponse_Variables_AdditionalProperties, using the provided StepResponseVariables2
func (t *StepResponse_Variables_AdditionalProperties) MergeStepResponseVariables2(v StepResponseVariables2) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsStepResponseVariables3 returns the union data inside the StepResponse_Variables_AdditionalProperties as a StepResponseVariables3
func (t StepResponse_Variables_AdditionalProperties) AsStepResponseVariables3() (StepResponseVariables3, error) {
	var body StepResponseVariables3
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStepResponseVariables3 overwrites any union data inside the StepResponse_Variables_AdditionalProperties as the provided StepResponseVariables3
func (t *StepResponse_Variables_AdditionalProperties) FromStepResponseVariables3(v StepResponseVariables3) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStepResponseVariables3 performs a merge with any union data inside the StepResponse_Variables_AdditionalProperties, using the provided StepResponseVariables3
func (t *StepResponse_Variables_AdditionalProperties) MergeStepResponseVariables3(v StepResponseVariables3) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t StepResponse_Variables_AdditionalProperties) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *StepResponse_Variables_AdditionalProperties) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
